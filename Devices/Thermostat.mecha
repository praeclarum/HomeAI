// 
board_thickness = 1.6;
BackPlate();
module Standoffs(standoff_height=10, hole_diam=3, dx=20, dy=60, show_board=true) {
    for (i = [0:2]) {
        for (j = [0:2]) {
            translate([-dx / 2 + i * dx, -dy / 2 + j * dy, 0])
            Standoff(standoff_height=standoff_height);
        }
    }
    if (show_board) {
        difference() {
            translate([0, 0, board_thickness / 2 + standoff_height])
            _m_material(c=[0.298038, 0.298047, 0.298042, 1], r=0.5, m=0)
            cube(size=[dx + hole_diam * 2, dy + hole_diam * 2, board_thickness], center=true);
            for (i = [0:2]) {
                for (j = [0:2]) {
                    translate([-dx / 2 + i * dx, -dy / 2 + j * dy, 0])
                    cylinder(h=100, r1=hole_diam / 2, r2=hole_diam / 2, center=true, $fa=5, $fs=0.5);
                }
            }
        }
    }
}
module ESP32(show_board=true, standoff_height=10) {
    Standoffs(dx=20.5 + 3, dy=43.66 + 3, show_board=show_board, standoff_height=standoff_height);
}
module TM1637(show_board=true, standoff_height=10) {
    if (show_board) {
        translate([0, 0, standoff_height + board_thickness + 8 / 2])
        _m_material(c=[0, 0, 0, 1], r=0.1, m=0)
        cube(size=[19, 50, 8], center=true);
    }
    Standoffs(dx=21, dy=60, show_board=show_board, standoff_height=standoff_height);
}
module BackPlate(thickness=3, show_boards=false) {
    _m_material(c=[0.901957, 0.901984, 0.901969, 1], r=0.5, m=0)
    union() {
        translate([28, -10, 0])
        rotate([0, 0, -90])
        Relay(show_board=show_boards, standoff_height=15);
        translate([-42, 28, 0])
        DHT22(show_board=show_boards, standoff_height=14);
        translate([30, -40, 0])
        rotate([0, 0, -90])
        RotaryEncoder(show_board=show_boards, standoff_height=20);
        difference() {
            translate([0, 0, -thickness / 2 + 0.1])
            _m_material(c=[0.599998, 0.600015, 0.600005, 1], r=0.5, m=0)
            cube(size=[100, 110, thickness * 1.1], center=true);
            translate([0, -21, 0])
            _m_material(c=[0.599998, 0.600015, 0.600005, 1], r=0.5, m=0)
            cube(size=[18, 30, thickness * 4], center=true);
            cylinder(h=100, r1=5 / 2, r2=5 / 2, center=true, $fa=5, $fs=0.5);
            translate([0, (3 + 9 / 32) / 2 * 25.4, 0])
            cylinder(h=100, r1=5 / 2, r2=5 / 2, center=true, $fa=5, $fs=0.5);
            translate([0, -(3 + 9 / 32) / 2 * 25.4, 0])
            cylinder(h=100, r1=5 / 2, r2=5 / 2, center=true, $fa=5, $fs=0.5);
        }
        translate([0, 22, 0])
        rotate([0, 0, 90])
        TM1637(show_board=show_boards, standoff_height=20);
        translate([-32, -26, 0])
        ESP32(show_board=show_boards, standoff_height=20);
    }
}
module RotaryEncoder(show_board=true, standoff_height=10) {
    if (show_board) {
        translate([0, 3, standoff_height + board_thickness + 8 + 10])
        _m_material(c=[0.599998, 0.600015, 0.600005, 1], r=0.05, m=0)
        cylinder(h=20, r1=6.7 / 2, r2=6.7 / 2, center=true, $fa=5, $fs=0.5);
    }
    if (show_board) {
        translate([0, 3, standoff_height + board_thickness + 8 / 2])
        _m_material(c=[0.599998, 0.600015, 0.600005, 1], r=0.1, m=0)
        cube(size=[12, 12, 8], center=true);
    }
    Standoffs(dx=18, dy=11.2 + 2.78, show_board=show_board, standoff_height=standoff_height, hole_diam=2.78);
}
module DHT22(show_board=true, standoff_height=10, hole_diam=2.6) {
    translate([0, -7.5, 0])
    Standoff(standoff_height=standoff_height);
    translate([0, 6, standoff_height / 2])
    _m_material(c=[0.999995, 1, 1, 1], r=0.8, m=0)
    cube(size=[6, 6, standoff_height], center=true);
    if (show_board) {
        translate([-0.329859, 10.003135, standoff_height + board_thickness + 8 / 2])
        _m_material(c=[0.999995, 1, 1, 1], r=0.8, m=0)
        cube(size=[12, 26, 8], center=true);
    }
    if (show_board) {
        difference() {
            translate([0, 0, board_thickness / 2 + standoff_height])
            _m_material(c=[0.298038, 0.298047, 0.298042, 1], r=0.5, m=0)
            cube(size=[13, 28, board_thickness], center=true);
            translate([0, -28 / 2 + 6.5, 0])
            cylinder(h=100, r1=hole_diam / 2, r2=hole_diam / 2, center=true, $fa=5, $fs=0.5);
        }
    }
}
module Relay(show_board=true, standoff_height=10) {
    if (show_board) {
        translate([0, 3, standoff_height + board_thickness + 15 / 2])
        _m_material(c=[0.028509, 0.250925, 0.501969, 1], r=0.8, m=0)
        cube(size=[15, 19, 15], center=true);
    }
    if (show_board) {
        translate([0, -11, standoff_height + board_thickness + 10 / 2])
        _m_material(c=[0.059472, 0.501943, 0.998465, 1], r=0.8, m=0)
        cube(size=[15, 8, 10], center=true);
    }
    Standoffs(dx=18.3 + 3.08, dy=26.23 + 3.08, show_board=show_board, standoff_height=standoff_height);
}
module Standoff(standoff_height=10, hole_diam=3) {
    union() {
        translate([0, 0, standoff_height / 3 / 2])
        cube(size=[hole_diam * 2.5, hole_diam * 2.5, standoff_height / 3], center=true);
        _m_material(c=[0.999993, 0.999963, 0.041015, 1], r=0.5, m=0)
        difference() {
            union() {
                translate([0, 0, standoff_height / 2])
                _m_material(c=[0.799997, 0.800021, 0.800007, 1], r=0.5, m=0)
                cylinder(h=standoff_height, r1=hole_diam / 2 * 1.75, r2=hole_diam / 2 * 1.75, center=true, $fa=5, $fs=0.5);
            }
            cylinder(h=100, r1=hole_diam / 2, r2=hole_diam / 2, center=true, $fa=5, $fs=0.5);
        }
    }
}
